<!DOCTYPE html>
<html>
<head>
  <title>Drag and Drop</title>
  <style>
    .container {
      width: 100%;
      height: 400px;
      border: 1px solid #ccc;
      padding: 10px;
      overflow-y: auto;
    }

    .item {
      display: inline-block;
      padding: 5px;
      margin: 5px;
      background-color: #f0f0f0;
      cursor: grab;
    }

    .item:active {
      opacity: 0.5;
    }

    .success-message {
      display: none;
      color: green;
      margin-top: 10px;
    }

    .reset-button {
      margin-top: 10px;
    }
  </style>
</head>
<body>
  <div class="container" id="container1">
    <div class="item" draggable="true">Item 1</div>
    <div class="item" draggable="true">Item 2</div>
    <div class="item" draggable="true">Item 3</div>
    <div class="item" draggable="true">Item 4</div>
  </div>

  <div class="container" id="container2"></div>

  <div class="success-message" id="successMessage">Item dropped successfully!</div>
  <button class="reset-button" onclick="reset()">Reset</button>

  <script>
    function dragStart(event) {
      const draggedItem = event.target;
      event.dataTransfer.setData('text/plain', draggedItem.innerHTML);
      event.dataTransfer.setData('prevContainerId', draggedItem.parentNode.id);
      event.currentTarget.style.opacity = '0.5';
    }

    function dragOver(event) {
      event.preventDefault();
    }

    function drop(event) {
      event.preventDefault();
      const draggedItemData = event.dataTransfer.getData('text/plain');
      const container = event.currentTarget;
      const newItem = document.createElement('div');
      newItem.className = 'item';
      newItem.innerHTML = draggedItemData;
      newItem.draggable = true;
      newItem.addEventListener('dragstart', dragStart);
      container.appendChild(newItem);
      document.getElementById('successMessage').style.display = 'block';

      const previousContainer = event.dataTransfer.getData('prevContainerId');
      if (previousContainer) {
        const prevContainer = document.getElementById(previousContainer);
        prevContainer.removeChild(event.target);
      }
    }

    function reset() {
      const container1 = document.getElementById('container1');
      const container2 = document.getElementById('container2');
      while (container1.firstChild) {
        container1.firstChild.removeEventListener('dragstart', dragStart);
        container1.firstChild.removeEventListener('dragover', dragOver);
        container1.firstChild.removeEventListener('drop', drop);
        container1.removeChild(container1.firstChild);
      }
      while (container2.firstChild) {
        container2.firstChild.removeEventListener('dragstart', dragStart);
        container2.firstChild.removeEventListener('dragover', dragOver);
        container2.firstChild.removeEventListener('drop', drop);
        container2.removeChild(container2.firstChild);
      }
      document.getElementById('successMessage').style.display = 'none';

      const items = ['Item 1', 'Item 2', 'Item 3', 'Item 4'];
      items.forEach(function(itemText) {
        const item = document.createElement('div');
        item.className = 'item';
        item.draggable = true;
        item.innerHTML = itemText;
        item.addEventListener('dragstart', dragStart);
        container1.appendChild(item);
      });
    }

    const container1Items = document.querySelectorAll('#container1 .item');
    container1Items.forEach(function(item) {
      item.addEventListener('dragstart', dragStart);
      item.addEventListener('dragover', dragOver);
      item.addEventListener('drop', drop);
    });

    const container2 = document.getElementById('container2');
    container2.addEventListener('dragstart', dragStart);
    container2.addEventListener('dragover', dragOver);
    container2.addEventListener('drop', drop);
  </script>
</body>
</html>
